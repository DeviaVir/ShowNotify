{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"[![endorse](http://api.coderwall.com/deviavir/endorsecount.png)](http://coderwall.com/deviavir)\r\n\r\n# ShowNotify\r\nThis PHP (using the Laraval framework) project allows users to be notified for new shows.\r\n\r\n## Instructions\r\nRead about how to use and develop against ShowNotify below. Pay special attention to e-mail addresses when forking, I have stated my own for a lot of reply-to's.\r\n\r\n### Styles\r\nThe styles are based on my [kube-framework boilerplate](https://github.com/DeviaVir/boilerplate-kube), find usage instructions there.\r\n\r\n### Cron\r\n0 10 * * * shownotify.nl/public/cron/index\r\n\r\nFind the controller that belongs in /application/controllers/cron.php below, please request an API key from thetvdb.com\r\n\r\n### Hosting\r\nI have hosted ShowNotify at [dualdev.com](https://dualdev.com/), with the following nginx config:\r\n\r\n```\r\n        location /public {\r\n            index index.php;\r\n            if (!-e $request_filename) {\r\n                rewrite  ^(.*)$  /public/index.php?/$1 last;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        location / {\r\n            rewrite ^ /public permanent;\r\n        }\r\n```\r\n\r\n### Database\r\nCreate a new database file based off of default Laravel database settings. It should be placed here: application/config/database.php\r\nFind the structure I used for my database all the way below!\r\n\r\n## License\r\nShowNotify is open-sourced software licensed under the MIT License.\r\n\r\n## MySQL\r\n\r\n```\r\n-- phpMyAdmin SQL Dump\r\n-- version 3.5.2.2\r\n-- http://www.phpmyadmin.net\r\nSET SQL_MODE=\"NO_AUTO_VALUE_ON_ZERO\";\r\nSET time_zone = \"+00:00\";\r\n\r\n\r\n/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;\r\n/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;\r\n/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;\r\n/*!40101 SET NAMES utf8 */;\r\n\r\nCREATE TABLE IF NOT EXISTS `users` (\r\n  `email` varchar(255) NOT NULL,\r\n  `password` varchar(255) NOT NULL,\r\n  `paid` tinyint(1) NOT NULL default '0',\r\n  `id` int(11) NOT NULL auto_increment,\r\n  PRIMARY KEY  (`id`)\r\n) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=12 ;\r\n\r\nCREATE TABLE IF NOT EXISTS `users_notifications` (\r\n  `user` varchar(255) NOT NULL,\r\n  `serie` int(11) NOT NULL,\r\n  `after` tinyint(1) NOT NULL default '0',\r\n  `name` mediumtext NOT NULL\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\r\n\r\n/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;\r\n/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;\r\n/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;\r\n\r\n```\r\n\r\n## /application/controllers/cron.php\r\n\r\n```\r\n<?php\r\nclass Cron_Controller extends Base_Controller {\t\r\n\tpublic $restful = true;\r\n\tpublic $layout  = 'layouts.main';\r\n\tprivate static $api    = /* Your API key from thetvdb.com here */'';\r\n\r\n\tpublic function get_index() {\r\n\t\tif( $_SERVER[ 'REMOTE_ADDR' ] == '95.211.76.103'\r\n\t\t || $_SERVER[ 'REMOTE_ADDR' ] == '2001:1af8:4500:a005:6::dd:c' ) { // DualDev cron servers\r\n\t\t\tset_time_limit ( 300 );\r\n\t\t\t$tomorrow = date( 'Y-m-d', ( time() + 86400 ) );\r\n\t\t\t$yesterday = date( 'Y-m-d', ( time() - 86400 ) );\r\n\r\n\t\t\t$groups = DB::Query( 'SELECT * FROM `users_notifications` GROUP BY `serie`' );\r\n\t\t\tforeach( $groups as $group ) {\r\n\t\t\t\t$serieURL = 'http://www.thetvdb.com/api/' . self::$api . '/series/' . $group->serie;\r\n\t\t\t\t$serie = simplexml_load_file( $serieURL );\r\n\r\n\t\t\t\t# Add to queue?\r\n\r\n\t\t\t\t$episodeURL = 'http://www.thetvdb.com/api/GetEpisodeByAirDate.php?apikey=' . self::$api . '&seriesid=' . $group->serie . '&airdate=' . $tomorrow;\r\n\t\t\t\t$episode = simplexml_load_file( $episodeURL );\r\n\r\n\t\t\t\t$error = $episode->Error;\r\n\t\t\t\tif( reset( $error ) != '' ) {\r\n\t\t\t\t\t// Continue\r\n\t\t\t\t\tprint 'Skip: ' . $group->serie . '<br />';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$users = DB::table( 'users_notifications' )->where( 'serie', '=', $group->serie )->where( 'after', '=', 0 );\r\n\t\t\t\t\tforeach( $users->get() as $user ) {\r\n\t\t\t\t\t\t$headers =  'From: notifications@shownotify.nl' . \"\\r\\n\" .\r\n\t\t\t\t\t\t\t'Reply-To: chase@sillevis.net' . \"\\r\\n\" .\r\n\t\t\t\t\t\t\t'X-Mailer: PHP/' . phpversion() . \"\\r\\n\" .\r\n\t\t\t\t\t\t\t'MIME-Version: 1.0' . \"\\r\\n\" . \r\n\t\t\t\t\t\t\t'Content-type: text/html; charset=iso-8859-1';\r\n\t\t\t\t\t\tmail( $user->user, 'Notification for tomorrow - ShowNotify', 'Hey! Look sharp, your show <strong>' . $serie->Series->SeriesName . '</strong> will continue tomorrow, it will be episode <strong>' . $episode->Episode->EpImgFlag . '</strong> of season <strong>' . $episode->Episode->SeasonNumber . '</strong> and will be called <strong>' . $episode->Episode->EpisodeName . '</strong>.<br /><br />\r\n\t\t\t\t\t\t\tHere is a short overview:<br />\r\n\t\t\t\t\t\t\t' . $episode->Episode->Overview . '\r\n\t\t\t\t\t\t\t<br /><br />\r\n\t\t\t\t\t\t\tHave fun watching and let me know how you liked it! :-)<br /><br />\r\n\t\t\t\t\t\t\t- Chase Sillevis<br />\r\n\t\t\t\t\t\t\thttps://chase.sillevis.net/', $headers );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$episodeURL = 'http://www.thetvdb.com/api/GetEpisodeByAirDate.php?apikey=' . self::$api . '&seriesid=' . $group->serie . '&airdate=' . $yesterday;\r\n\t\t\t\t$episode = simplexml_load_file( $episodeURL );\r\n\r\n\t\t\t\t$error = $episode->Error;\r\n\t\t\t\tif( reset( $error ) != '' ) {\r\n\t\t\t\t\t// Continue\r\n\t\t\t\t\tprint 'Skip: ' . $group->serie . '<br />';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$users = DB::table( 'users_notifications' )->where( 'serie', '=', $group->serie )->where( 'after', '=', 1 );\r\n\t\t\t\t\tforeach( $users->get() as $user ) {\r\n\t\t\t\t\t\t$headers =  'From: notifications@shownotify.nl' . \"\\r\\n\" .\r\n\t\t\t\t\t\t\t'Reply-To: chase@sillevis.net' . \"\\r\\n\" .\r\n\t\t\t\t\t\t\t'X-Mailer: PHP/' . phpversion() . \"\\r\\n\" .\r\n\t\t\t\t\t\t\t'MIME-Version: 1.0' . \"\\r\\n\" . \r\n\t\t\t\t\t\t\t'Content-type: text/html; charset=iso-8859-1';\r\n\t\t\t\t\tmail( $user->user, 'Notification from yesterday - ShowNotify', 'Hey! Look sharp, your show <strong>' . $serie->Series->SeriesName . '</strong> has continued, it was episode <strong>' . $episode->Episode->EpImgFlag . '</strong> of season <strong>' . $episode->Episode->SeasonNumber . '</strong> and has been called <strong>' . $episode->Episode->EpisodeName . '</strong>.<br /><br />\r\n\t\t\t\t\t\tHere is a short overview:<br />\r\n\t\t\t\t\t\t' . $episode->Episode->Overview . '\r\n\t\t\t\t\t\t<br /><br />\r\n\t\t\t\t\t\tHave fun watching and let me know how you liked it! :-)<br /><br />\r\n\t\t\t\t\t\t- Chase Sillevis<br />\r\n\t\t\t\t\t\thttps://chase.sillevis.net/', $headers );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$this->layout->nest( 'content', 'home.cron', array() );\r\n\t\t} else {\r\n\t\t\treturn 'access denied';\r\n\t\t}\r\n\t}\r\n}\r\n?>\r\n```","name":"Shownotify","tagline":"Notifies you of new show releases","google":""}